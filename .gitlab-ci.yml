variables:
  CODE_IMAGE: $CI_REGISTRY_IMAGE/$CI_PROJECT_NAME:$CI_COMMIT_SHA

stages:
  - npm
  - build
  - deploy

npm:
  stage: npm
  image: node
  tags:
    - docker
  only:
  - production
  - development

  artifacts:
    paths:
    - ./build/

  cache:
    paths:
      - node_modules

  script:
    - apt-get update; apt-get -y install curl
    - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
    - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
    - apt-get update && apt-get -y install yarn
    - yarn
    - npm run build

.common_deploy: &common_deploy
  stage: deploy
  tags:
    - docker
  image: docker:latest
  services:
    - docker:dind
  script:
    - case ${CI_ENVIRONMENT_SLUG} in
        production)
        echo "$PRODUCTION_KUBERNETES_CONFIG" > kube_config;
        echo "$PRODUCTION_TLS_CRT" > tls.crt;
        echo "$PRODUCTION_TLS_KEY" > tls.key
        ;;
        development)
        echo "$DEVELOPMENT_KUBERNETES_CONFIG" > kube_config;
        echo "$DEVELOPMENT_TLS_CRT" > tls.crt;
        echo "$DEVELOPMENT_TLS_KEY" > tls.key
        ;;
        esac
    - sed -i "s/FULL_APP_NAME/${CI_PROJECT_PATH_SLUG}/g" namespace.yaml
    - sed -i "s/BRANCH_ENVIRONMENT/${CI_ENVIRONMENT_SLUG}/g" namespace.yaml
    - sed -i "s/CI_JOB_ID/${CI_JOB_ID}/g" deploy-service.yaml
    - sed -i "s/COMMIT_SHA/${CI_COMMIT_SHA}/g" deploy-service.yaml
    - sed -i "s/FULL_APP_NAME/${CI_PROJECT_PATH_SLUG}/g" deploy-service.yaml
    - sed -i "s/BRANCH_ENVIRONMENT/${CI_ENVIRONMENT_SLUG}/g" deploy-service.yaml
    - sed -i "s~GITLAB_DOCKER_REGISTRY_IMAGE~${CI_REGISTRY_IMAGE}~g" deploy-service.yaml
    - sed -i "s/SHORT_APP_NAME/${CI_PROJECT_NAME}/g" deploy-service.yaml
    - sed -i "s/INGRESS_HOSTNAME/${CI_ENVIRONMENT_URL}/g" deploy-service.yaml
    - docker run -v ${PWD}/kube_config:/root/.kube/config -v ${PWD}/namespace.yaml:/namespace.yaml lachlanevenson/k8s-kubectl:v1.10.3 apply -f /namespace.yaml
    - docker run -v ${PWD}/kube_config:/root/.kube/config lachlanevenson/k8s-kubectl:v1.10.3 -n $CI_PROJECT_PATH_SLUG-$CI_ENVIRONMENT_SLUG create secret docker-registry regcred --docker-server=$CI_REGISTRY --docker-username=$CI_REGISTRY_USER --docker-password=$CI_REGISTRY_PASSWORD --docker-email=$GITLAB_USER_EMAIL || true
    - docker run -v ${PWD}/kube_config:/root/.kube/config lachlanevenson/k8s-kubectl:v1.10.3 -n ${CI_PROJECT_PATH_SLUG}-${CI_ENVIRONMENT_SLUG} delete secret wildcard-mxp || true
    - docker run -v ${PWD}/kube_config:/root/.kube/config -v ${PWD}/tls.key:/tls.key -v ${PWD}/tls.crt:/tls.crt lachlanevenson/k8s-kubectl:v1.10.3 -n ${CI_PROJECT_PATH_SLUG}-${CI_ENVIRONMENT_SLUG} create secret tls wildcard-mxp --key /tls.key --cert /tls.crt
    - docker run -v ${PWD}/kube_config:/root/.kube/config -v ${PWD}/deploy-service.yaml:/deploy-service.yaml lachlanevenson/k8s-kubectl:v1.10.3 apply -f /deploy-service.yaml
    - echo "${CI_ENVIRONMENT_URL} Deployed"

.common_build: &common_build
  stage: build
  image: docker:latest
  tags:
    - docker
  services:
    - docker:dind
  script:
    - case ${CI_ENVIRONMENT_SLUG} in
        production)
        echo "$DEV_CONFIG" > src/common/js/env.js
        ;;
        development)
        echo "$PROD_CONFIG" > src/common/js/env.js
        ;;
        esac
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" "$CI_REGISTRY" --password-stdin
    - docker build --tag="$CODE_IMAGE" .
    - docker push $CODE_IMAGE

deploy_prod:
  <<: *common_deploy
  dependencies:
    - build_prod
  environment:
    name: production
    url: lma.mxp.world
  #when: manual
  only:
  - production

deploy_dev:
  <<: *common_deploy
  dependencies:
    - build_dev
  environment:
    name: development
    url: lma.mxp.dev
  only:
  - development

build_prod:
  <<: *common_build
  environment:
    name: production
  #when: manual
  only:
  - production

build_dev:
  <<: *common_build
  environment:
    name: development
  only:
  - development